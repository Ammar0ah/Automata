@import url('https://fonts.googleapis.com/css?family=Cairo');

body {
    background-color: #2A1B3C;
}

* {
    font-family: 'Cairo';
}

*:focus {
    outline: none;
}

.load-state {
    margin: 50px auto;
    text-align: center;
}

.load-state button {
    background-color: rgb(217, 63, 135);
    border: 0;
    /* box-shadow: 0px 0px 10px 2px rgb(68, 49, 141,0.5); */
    font-size: 3rem;
    font-weight: 600;
    border-radius: 10px;
    padding: 10px 20px;
    color: white;
    transition: all 0.2s ease-in-out;
    cursor: pointer;
}

.load-state button:hover,
.statment button:hover {
    background-color: rgb(224, 221, 221);
    color: #D93F87;
    box-shadow: 0px 0px 5px 3px rgb(68, 49, 141, 0.5);
}

.input-field {
    margin: 50px auto;
    text-align: center;
}

.input-field input {
    display: block;
    width: 70%;
    margin: auto;
    padding: 5px 10px;
    height: 6rem;
    background-color: rgba(0, 0, 0, 0.2);
    border: 0;
    border-radius: 10px;
    font-size: 3rem;
    color: rgba(255, 255, 255, 0.7)
}

.input-field input::placeholder {
    font-size: 3rem;
    color: rgba(255, 255, 255, 0.3)
}

h3 {
    text-align: center;
    color: rgba(255, 255, 255, 0.9);
    font-size: 3.5rem;
}

h3::after {
    content: "";
    height: 1px;
    display: block;
    width: 50%;
    margin: auto;
    border-top: 5px solid rgba(0, 0, 0, 0.1)
}

.button {
    display: block;
    margin: auto;
    padding: 1em 2em;
    border: none;
    background: none;
    color: inherit;
    position: relative;
    z-index: 1;
}

.button:focus {
    outline: none;
}

.button>span {
    vertical-align: middle;
}

/* Text color adjustments (we could stick to the "inherit" but that does not work well in Safari) */
.bg-1 .button {
    color: #37474f;
    border-color: #37474f;
}

.bg-2 .button {
    color: #ECEFF1;
    border-color: #ECEFF1;
}

.bg-3 .button {
    color: #fff;
    border-color: #fff;
}

/* Sizes */
.button--size-s {
    font-size: 14px;
}

.button--size-m {
    font-size: 16px;
}

.button--size-l {
    font-size: 18px;
}

/* Typography and Roundedness */
.button--text-upper {
    letter-spacing: 2px;
    text-transform: uppercase;
}

.button--text-thin {
    font-weight: 300;
}

.button--text-medium {
    font-weight: 500;
}

.button--text-thick {
    font-weight: 600;
}

.button--round-s {
    border-radius: 5px;
}

.button--round-m {
    border-radius: 15px;
}

.button--round-l {
    border-radius: 40px;
}

/* Borders */
.button--border-thin {
    border: 1px solid;
}

.button--border-medium {
    border: 2px solid;
}

.button--border-thick {
    border: 3px solid;
}

/* Nuka */
.button--nuka {
    -webkit-transition: color 0.3s;
    transition: color 0.3s;
    -webkit-transition-timing-function: cubic-bezier(0.2, 1, 0.3, 1);
    transition-timing-function: cubic-bezier(0.2, 1, 0.3, 1);
}

.button--nuka.button--inverted {
    color: #37474f;
}

.button--nuka::before,
.button--nuka::after {
    content: '';
    position: absolute;
    border-radius: inherit;
    background: #D93F87;
    z-index: -1;
}

.button--nuka::before {
    top: -4px;
    bottom: -4px;
    left: -4px;
    right: -4px;
    opacity: 0.2;
    -webkit-transform: scale3d(0.7, 1, 1);
    transform: scale3d(0.7, 1, 1);
    -webkit-transition: -webkit-transform 0.3s, opacity 0.3s;
    transition: transform 0.3s, opacity 0.3s;
}

.button--nuka::after {
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    -webkit-transform: scale3d(1.1, 1, 1);
    transform: scale3d(1.1, 1, 1);
    -webkit-transition: -webkit-transform 0.3s, background-color 0.3s;
    transition: transform 0.3s, background-color 0.3s;
}

.button--nuka::before,
.button--nuka::after {
    -webkit-transition-timing-function: cubic-bezier(0.2, 1, 0.3, 1);
    transition-timing-function: cubic-bezier(0.2, 1, 0.3, 1);
}

.button--nuka.button--inverted::before,
.button--nuka.button--inverted::after {
    background: #fff;
}

.button--nuka:hover {
    color: #fff;
    text-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2)
}

.button--nuka:hover::before {
    opacity: 1;
}

.button--nuka:hover::after {
    background-color: rgba(42, 27, 60, 0.9);
}

.button--nuka.button--inverted:hover::after {
    background-color: #7986cb;
}

.button--nuka:hover::after,
.button--nuka:hover::before {
    -webkit-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1);
}


.notify {
    position: absolute;
    bottom: 0px;
    left: 0;
    width: 100%;
    height: 0;
    box-sizing: border-box;
    color: white;
    text-align: center;
    background: rgba(0, 0, 0, .5);
    overflow: hidden;
    box-sizing: border-box;
    transition: height .2s;
}

#notifyType:before {
    display: block;
    margin-top: 15px;

}

.active {
    height: 100px;
}

.success:before {
    Content: "Automata Loaded Successfully";
    font-size: 2rem;
}


.App {
    text-align: center;
    width: 90%;
    margin: auto;
}

.statment {
    margin: 12px auto;
    text-align: center;
}

.statment input[type=text] {
    background-color: rgba(0, 0, 0, 0.2);
    margin: 10px;
    border: 0;
    border-radius: 10px;
    padding: 8px;
    color: rgba(255, 255, 255, 0.7);
    font-size: 1.5rem
}

.statment input[type=checkbox] {
    display: block;
    margin: 10px auto;
}

.statment button {
    background-color: rgb(217, 63, 135);
    border: 0;
    font-size: 1.5rem;
    font-weight: 600;
    border-radius: 10px;
    padding: 5px 10px;
    color: white;
    transition: all 0.2s ease-in-out;
    cursor: pointer;
}

.checkLabel {
    margin: auto;
    justify-content: center;
    align-items: center;
}

.checkLabel input[type="checkbox"] {
    -webkit-appearance: none;
}

.checkLabel .chk {
    width: 80px;
    height: 40px;
    margin: 18px auto;
    border-radius: 50px;
    background: rgba(0, 0, 0, 0.2);
    display: block;
    cursor: pointer;
    position: relative;
}

.checkLabel .chk::before {
    content: "";
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: #999;
    display: block;
    transition: .5s;
}

.checkLabel .chk::after {
    content: "";
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    color: #fff;
    opacity: 0;
    font-size: 30px;
    transition: .5s;
}

.checkLabel input[type="checkbox"]:checked~.chk::before {
    transform: translateX(40px);
    background: #D93F87;
}

.checkLabel input[type="checkbox"]:checked~.chk::after {
    /* right: -30px; */
    opacity: 1;
}



.checkLabel input[type="checkbox"]:checked~p {
    transition-delay: .5s;
    transform: translateY(0);
    background-position-x: 0;
}

.addButton {
    margin: 10px auto;
    display: block;
    padding: 15px;
    background-color: rgba(255, 255, 255, 0.027);
    color: #fff;
    border-radius: 10px;
    text-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);
    border: 3px solid #D93F87;
}

.addButton:hover {
    background-color: rgba(42, 27, 60, 0.9);
}

hr {
    border-color: rgba(42, 27, 60, 0.3)
}